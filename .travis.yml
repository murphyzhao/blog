language: 
  - node_js
  - go
sudo: required
# 指定node_js版本
node_js: 
  - lts/*

go:
  - 1.14
cache:	# 缓存，提高下次构建的效率
  yarn: true
  directories:
    - node_modules

# 安装 pip：wget -O pip-20.0.2.tar.gz https://github.com/pypa/pip/archive/20.0.2.tar.gz
# 安装腾讯 COS
install:    # 安装阶段（详细的各阶段顺序，请查询 Travis-CI 相关文档）
  - yarn install

# 克隆上次提交的 blog，获取 gh-pages 分支文件，备用
# 克隆 git clone https://github.com/GopherRoad/tencent_cos_sync_for_blog.git tcos_blog_sync
before_script:
  - echo "--> before script:"
  - pwd
  - ls -la
  - cd ..
  - git clone https://github.com/murphyzhao/blog.git blog_bak_for_sync
  - git clone https://github.com/GopherRoad/tencent_cos_sync_for_blog.git tcos_blog_sync
  - ls -la
  - cd blog
  - pwd

script:    # 执行构建阶段
  - echo "--> script:"
  - hexo clean    # hexo 的清理命令
  - hexo generate    # hexo 的生成（构建）命令，即最核心的生成静态文件过程
  - echo $GOPATH
  - echo $PWD
  - go version

# GitHub Pages Deployment
deploy:    # 部署阶段
  provider: pages    # 约定 pages 为 GitHub Pages 服务，必须且不可更改
  skip-cleanup: true  # 必须跳过清理，否则过程中生成的文件（要发布的静态资源）会被清理
  github-token: $GITHUB_TOKEN  # 部署时使用的 token
  keep-history: false   # 设置为 false 时，使用 `git push --force` 命令覆盖历史记录
  on:
    branch: master    # 仅监听 master 分支的变化，才执行构建
  target-branch: gh-pages   # 用于存放静态资源的分支
  local-dir: public   # `hexo generate` 命令生成的静态资源所在路径
  fqdn: murphy.tech    # 自定义域名

# 推送 gh-pages 分支代码到腾讯 COS
after_deploy:
  - echo "--> after deploy:"
  - pwd
  - ls
  - cd ..
  - pwd
  - git clone https://github.com/murphyzhao/blog.git blog_bak
  - ls
  - cd blog_bak
  - pwd
  - git branch -a
  - git checkout -f -B gh-pages remotes/origin/gh-pages --
  - git push https://zhaojuntao:$GITEE_BLOG_TOKEN@gitee.com/zhaojuntao/zhaojuntao.git --all --force
  - git push https://mGpePgxuQt:$CODING_TOKEN@e.coding.net/murphyzhao/blog.git --all --force
  - curl -X POST --header 'Content-Type:application/json;charset=UTF-8' 'https://gitee.com/api/v5/repos/zhaojuntao/zhaojuntao/pages/builds' -d '{"access_token":"$GITEE_BLOG_TOKEN"}' 
  - echo "==== Finish! ===="
